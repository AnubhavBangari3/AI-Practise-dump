{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPI0V2FdhEW8D06xk5P4Kl8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"vHpGozMAhhb3","executionInfo":{"status":"ok","timestamp":1728196334171,"user_tz":-330,"elapsed":3696,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from google.colab import drive"],"metadata":{"id":"nB8Fl2-whuNB","executionInfo":{"status":"ok","timestamp":1728196345024,"user_tz":-330,"elapsed":3,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L7Vi59Tyh3AQ","executionInfo":{"status":"ok","timestamp":1728196380054,"user_tz":-330,"elapsed":32129,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"3290b432-5dcf-46be-d759-e40499e001d6"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["!ls \"gdrive/MyDrive/Colab Notebooks/Youtube Practise/Kaggle /House price advanced regression/Data/\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2GL3jYZTh4T-","executionInfo":{"status":"ok","timestamp":1728196430817,"user_tz":-330,"elapsed":806,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"d53e0837-7f81-427a-8510-1848cdd1963c"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["data_description.txt  sample_submission.csv  test.csv  train.csv\n"]}]},{"cell_type":"code","source":["df_1=pd.read_csv(\"gdrive/MyDrive/Colab Notebooks/Youtube Practise/Kaggle /House price advanced regression/Data/train.csv\")\n","df_2=pd.read_csv(\"gdrive/MyDrive/Colab Notebooks/Youtube Practise/Kaggle /House price advanced regression/Data/test.csv\")"],"metadata":{"id":"433sXldFh_YE","executionInfo":{"status":"ok","timestamp":1728196520706,"user_tz":-330,"elapsed":1089,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df_1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":255},"id":"lDDVNtpmiiPB","executionInfo":{"status":"ok","timestamp":1728196530681,"user_tz":-330,"elapsed":980,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"34fe1cce-00ba-478d-add4-0d3ae846a3a0"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n","0   1          60       RL         65.0     8450   Pave   NaN      Reg   \n","1   2          20       RL         80.0     9600   Pave   NaN      Reg   \n","2   3          60       RL         68.0    11250   Pave   NaN      IR1   \n","3   4          70       RL         60.0     9550   Pave   NaN      IR1   \n","4   5          60       RL         84.0    14260   Pave   NaN      IR1   \n","\n","  LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal MoSold  \\\n","0         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n","1         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      5   \n","2         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      9   \n","3         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n","4         Lvl    AllPub  ...        0    NaN   NaN         NaN       0     12   \n","\n","  YrSold  SaleType  SaleCondition  SalePrice  \n","0   2008        WD         Normal     208500  \n","1   2007        WD         Normal     181500  \n","2   2008        WD         Normal     223500  \n","3   2006        WD        Abnorml     140000  \n","4   2008        WD         Normal     250000  \n","\n","[5 rows x 81 columns]"],"text/html":["\n","  <div id=\"df-dfe8ba6b-1be5-4ab9-bfab-ec8518feb5aa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>MSSubClass</th>\n","      <th>MSZoning</th>\n","      <th>LotFrontage</th>\n","      <th>LotArea</th>\n","      <th>Street</th>\n","      <th>Alley</th>\n","      <th>LotShape</th>\n","      <th>LandContour</th>\n","      <th>Utilities</th>\n","      <th>...</th>\n","      <th>PoolArea</th>\n","      <th>PoolQC</th>\n","      <th>Fence</th>\n","      <th>MiscFeature</th>\n","      <th>MiscVal</th>\n","      <th>MoSold</th>\n","      <th>YrSold</th>\n","      <th>SaleType</th>\n","      <th>SaleCondition</th>\n","      <th>SalePrice</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>65.0</td>\n","      <td>8450</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>208500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>RL</td>\n","      <td>80.0</td>\n","      <td>9600</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>2007</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>181500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>68.0</td>\n","      <td>11250</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>223500</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>70</td>\n","      <td>RL</td>\n","      <td>60.0</td>\n","      <td>9550</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Abnorml</td>\n","      <td>140000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>84.0</td>\n","      <td>14260</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>250000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 81 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dfe8ba6b-1be5-4ab9-bfab-ec8518feb5aa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dfe8ba6b-1be5-4ab9-bfab-ec8518feb5aa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dfe8ba6b-1be5-4ab9-bfab-ec8518feb5aa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2d60c33f-7a04-4ddd-aceb-3429d5818abc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d60c33f-7a04-4ddd-aceb-3429d5818abc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2d60c33f-7a04-4ddd-aceb-3429d5818abc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_1"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df_2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":255},"id":"_t3IyWeTikZz","executionInfo":{"status":"ok","timestamp":1728196538321,"user_tz":-330,"elapsed":580,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"c77bfcfa-41a4-4a19-99e7-62bb6e8e915a"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n","0  1461          20       RH         80.0    11622   Pave   NaN      Reg   \n","1  1462          20       RL         81.0    14267   Pave   NaN      IR1   \n","2  1463          60       RL         74.0    13830   Pave   NaN      IR1   \n","3  1464          60       RL         78.0     9978   Pave   NaN      IR1   \n","4  1465         120       RL         43.0     5005   Pave   NaN      IR1   \n","\n","  LandContour Utilities  ... ScreenPorch PoolArea PoolQC  Fence MiscFeature  \\\n","0         Lvl    AllPub  ...         120        0    NaN  MnPrv         NaN   \n","1         Lvl    AllPub  ...           0        0    NaN    NaN        Gar2   \n","2         Lvl    AllPub  ...           0        0    NaN  MnPrv         NaN   \n","3         Lvl    AllPub  ...           0        0    NaN    NaN         NaN   \n","4         HLS    AllPub  ...         144        0    NaN    NaN         NaN   \n","\n","  MiscVal MoSold  YrSold  SaleType  SaleCondition  \n","0       0      6    2010        WD         Normal  \n","1   12500      6    2010        WD         Normal  \n","2       0      3    2010        WD         Normal  \n","3       0      6    2010        WD         Normal  \n","4       0      1    2010        WD         Normal  \n","\n","[5 rows x 80 columns]"],"text/html":["\n","  <div id=\"df-9bbd334e-3c81-4a86-bf4c-75c595ed2813\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>MSSubClass</th>\n","      <th>MSZoning</th>\n","      <th>LotFrontage</th>\n","      <th>LotArea</th>\n","      <th>Street</th>\n","      <th>Alley</th>\n","      <th>LotShape</th>\n","      <th>LandContour</th>\n","      <th>Utilities</th>\n","      <th>...</th>\n","      <th>ScreenPorch</th>\n","      <th>PoolArea</th>\n","      <th>PoolQC</th>\n","      <th>Fence</th>\n","      <th>MiscFeature</th>\n","      <th>MiscVal</th>\n","      <th>MoSold</th>\n","      <th>YrSold</th>\n","      <th>SaleType</th>\n","      <th>SaleCondition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1461</td>\n","      <td>20</td>\n","      <td>RH</td>\n","      <td>80.0</td>\n","      <td>11622</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>120</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>MnPrv</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1462</td>\n","      <td>20</td>\n","      <td>RL</td>\n","      <td>81.0</td>\n","      <td>14267</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Gar2</td>\n","      <td>12500</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1463</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>74.0</td>\n","      <td>13830</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>MnPrv</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1464</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>78.0</td>\n","      <td>9978</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1465</td>\n","      <td>120</td>\n","      <td>RL</td>\n","      <td>43.0</td>\n","      <td>5005</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>HLS</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>144</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 80 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9bbd334e-3c81-4a86-bf4c-75c595ed2813')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9bbd334e-3c81-4a86-bf4c-75c595ed2813 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9bbd334e-3c81-4a86-bf4c-75c595ed2813');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2880ed75-057c-49ea-b58a-3ae5916b01fc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2880ed75-057c-49ea-b58a-3ae5916b01fc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2880ed75-057c-49ea-b58a-3ae5916b01fc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_2"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["if 'SalePrice' in df_2.columns:\n","  df_2['SalePrice']=0\n","df=pd.concat([df_1,df_2],axis=0)\n"],"metadata":{"id":"wgTREbK1imqr","executionInfo":{"status":"ok","timestamp":1728196717764,"user_tz":-330,"elapsed":676,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["df=df.set_index('Id')"],"metadata":{"id":"ZFGQqBwijSaU","executionInfo":{"status":"ok","timestamp":1728196735445,"user_tz":-330,"elapsed":671,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"6FGVWxJqjWv4","executionInfo":{"status":"ok","timestamp":1728196740421,"user_tz":-330,"elapsed":717,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"15275f5e-f35b-4dc6-e9da-f95f68593f61"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n","Id                                                                    \n","1           60       RL         65.0     8450   Pave   NaN      Reg   \n","2           20       RL         80.0     9600   Pave   NaN      Reg   \n","3           60       RL         68.0    11250   Pave   NaN      IR1   \n","4           70       RL         60.0     9550   Pave   NaN      IR1   \n","5           60       RL         84.0    14260   Pave   NaN      IR1   \n","\n","   LandContour Utilities LotConfig  ... PoolArea PoolQC Fence MiscFeature  \\\n","Id                                  ...                                     \n","1          Lvl    AllPub    Inside  ...        0    NaN   NaN         NaN   \n","2          Lvl    AllPub       FR2  ...        0    NaN   NaN         NaN   \n","3          Lvl    AllPub    Inside  ...        0    NaN   NaN         NaN   \n","4          Lvl    AllPub    Corner  ...        0    NaN   NaN         NaN   \n","5          Lvl    AllPub       FR2  ...        0    NaN   NaN         NaN   \n","\n","   MiscVal MoSold  YrSold  SaleType  SaleCondition  SalePrice  \n","Id                                                             \n","1        0      2    2008        WD         Normal   208500.0  \n","2        0      5    2007        WD         Normal   181500.0  \n","3        0      9    2008        WD         Normal   223500.0  \n","4        0      2    2006        WD        Abnorml   140000.0  \n","5        0     12    2008        WD         Normal   250000.0  \n","\n","[5 rows x 80 columns]"],"text/html":["\n","  <div id=\"df-8c99ecd9-6892-4e8c-a0ce-01eecc564aba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MSSubClass</th>\n","      <th>MSZoning</th>\n","      <th>LotFrontage</th>\n","      <th>LotArea</th>\n","      <th>Street</th>\n","      <th>Alley</th>\n","      <th>LotShape</th>\n","      <th>LandContour</th>\n","      <th>Utilities</th>\n","      <th>LotConfig</th>\n","      <th>...</th>\n","      <th>PoolArea</th>\n","      <th>PoolQC</th>\n","      <th>Fence</th>\n","      <th>MiscFeature</th>\n","      <th>MiscVal</th>\n","      <th>MoSold</th>\n","      <th>YrSold</th>\n","      <th>SaleType</th>\n","      <th>SaleCondition</th>\n","      <th>SalePrice</th>\n","    </tr>\n","    <tr>\n","      <th>Id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>65.0</td>\n","      <td>8450</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>Inside</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>208500.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>RL</td>\n","      <td>80.0</td>\n","      <td>9600</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>FR2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>2007</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>181500.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>68.0</td>\n","      <td>11250</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>Inside</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>223500.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>70</td>\n","      <td>RL</td>\n","      <td>60.0</td>\n","      <td>9550</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>Corner</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Abnorml</td>\n","      <td>140000.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>84.0</td>\n","      <td>14260</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>FR2</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>250000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 80 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c99ecd9-6892-4e8c-a0ce-01eecc564aba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8c99ecd9-6892-4e8c-a0ce-01eecc564aba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8c99ecd9-6892-4e8c-a0ce-01eecc564aba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3524c8a8-de81-4d11-93b8-26d1e2302c32\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3524c8a8-de81-4d11-93b8-26d1e2302c32')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3524c8a8-de81-4d11-93b8-26d1e2302c32 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349},"id":"IeVQKMGTjX6q","executionInfo":{"status":"ok","timestamp":1728196828531,"user_tz":-330,"elapsed":996,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"9ba4e694-b61e-4b70-bdee-1d87d5978d50"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        MSSubClass  LotFrontage        LotArea  OverallQual  OverallCond  \\\n","count  2919.000000  2433.000000    2919.000000  2919.000000  2919.000000   \n","mean     57.137718    69.305795   10168.114080     6.089072     5.564577   \n","std      42.517628    23.344905    7886.996359     1.409947     1.113131   \n","min      20.000000    21.000000    1300.000000     1.000000     1.000000   \n","25%      20.000000    59.000000    7478.000000     5.000000     5.000000   \n","50%      50.000000    68.000000    9453.000000     6.000000     5.000000   \n","75%      70.000000    80.000000   11570.000000     7.000000     6.000000   \n","max     190.000000   313.000000  215245.000000    10.000000     9.000000   \n","\n","         YearBuilt  YearRemodAdd   MasVnrArea   BsmtFinSF1   BsmtFinSF2  ...  \\\n","count  2919.000000   2919.000000  2896.000000  2918.000000  2918.000000  ...   \n","mean   1971.312778   1984.264474   102.201312   441.423235    49.582248  ...   \n","std      30.291442     20.894344   179.334253   455.610826   169.205611  ...   \n","min    1872.000000   1950.000000     0.000000     0.000000     0.000000  ...   \n","25%    1953.500000   1965.000000     0.000000     0.000000     0.000000  ...   \n","50%    1973.000000   1993.000000     0.000000   368.500000     0.000000  ...   \n","75%    2001.000000   2004.000000   164.000000   733.000000     0.000000  ...   \n","max    2010.000000   2010.000000  1600.000000  5644.000000  1526.000000  ...   \n","\n","        WoodDeckSF  OpenPorchSF  EnclosedPorch    3SsnPorch  ScreenPorch  \\\n","count  2919.000000  2919.000000    2919.000000  2919.000000  2919.000000   \n","mean     93.709832    47.486811      23.098321     2.602261    16.062350   \n","std     126.526589    67.575493      64.244246    25.188169    56.184365   \n","min       0.000000     0.000000       0.000000     0.000000     0.000000   \n","25%       0.000000     0.000000       0.000000     0.000000     0.000000   \n","50%       0.000000    26.000000       0.000000     0.000000     0.000000   \n","75%     168.000000    70.000000       0.000000     0.000000     0.000000   \n","max    1424.000000   742.000000    1012.000000   508.000000   576.000000   \n","\n","          PoolArea       MiscVal       MoSold       YrSold      SalePrice  \n","count  2919.000000   2919.000000  2919.000000  2919.000000    1460.000000  \n","mean      2.251799     50.825968     6.213087  2007.792737  180921.195890  \n","std      35.663946    567.402211     2.714762     1.314964   79442.502883  \n","min       0.000000      0.000000     1.000000  2006.000000   34900.000000  \n","25%       0.000000      0.000000     4.000000  2007.000000  129975.000000  \n","50%       0.000000      0.000000     6.000000  2008.000000  163000.000000  \n","75%       0.000000      0.000000     8.000000  2009.000000  214000.000000  \n","max     800.000000  17000.000000    12.000000  2010.000000  755000.000000  \n","\n","[8 rows x 37 columns]"],"text/html":["\n","  <div id=\"df-168b157f-f1cf-49f6-a31a-f7df908d145f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MSSubClass</th>\n","      <th>LotFrontage</th>\n","      <th>LotArea</th>\n","      <th>OverallQual</th>\n","      <th>OverallCond</th>\n","      <th>YearBuilt</th>\n","      <th>YearRemodAdd</th>\n","      <th>MasVnrArea</th>\n","      <th>BsmtFinSF1</th>\n","      <th>BsmtFinSF2</th>\n","      <th>...</th>\n","      <th>WoodDeckSF</th>\n","      <th>OpenPorchSF</th>\n","      <th>EnclosedPorch</th>\n","      <th>3SsnPorch</th>\n","      <th>ScreenPorch</th>\n","      <th>PoolArea</th>\n","      <th>MiscVal</th>\n","      <th>MoSold</th>\n","      <th>YrSold</th>\n","      <th>SalePrice</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2919.000000</td>\n","      <td>2433.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2896.000000</td>\n","      <td>2918.000000</td>\n","      <td>2918.000000</td>\n","      <td>...</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>2919.000000</td>\n","      <td>1460.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>57.137718</td>\n","      <td>69.305795</td>\n","      <td>10168.114080</td>\n","      <td>6.089072</td>\n","      <td>5.564577</td>\n","      <td>1971.312778</td>\n","      <td>1984.264474</td>\n","      <td>102.201312</td>\n","      <td>441.423235</td>\n","      <td>49.582248</td>\n","      <td>...</td>\n","      <td>93.709832</td>\n","      <td>47.486811</td>\n","      <td>23.098321</td>\n","      <td>2.602261</td>\n","      <td>16.062350</td>\n","      <td>2.251799</td>\n","      <td>50.825968</td>\n","      <td>6.213087</td>\n","      <td>2007.792737</td>\n","      <td>180921.195890</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>42.517628</td>\n","      <td>23.344905</td>\n","      <td>7886.996359</td>\n","      <td>1.409947</td>\n","      <td>1.113131</td>\n","      <td>30.291442</td>\n","      <td>20.894344</td>\n","      <td>179.334253</td>\n","      <td>455.610826</td>\n","      <td>169.205611</td>\n","      <td>...</td>\n","      <td>126.526589</td>\n","      <td>67.575493</td>\n","      <td>64.244246</td>\n","      <td>25.188169</td>\n","      <td>56.184365</td>\n","      <td>35.663946</td>\n","      <td>567.402211</td>\n","      <td>2.714762</td>\n","      <td>1.314964</td>\n","      <td>79442.502883</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>20.000000</td>\n","      <td>21.000000</td>\n","      <td>1300.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1872.000000</td>\n","      <td>1950.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>2006.000000</td>\n","      <td>34900.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>20.000000</td>\n","      <td>59.000000</td>\n","      <td>7478.000000</td>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","      <td>1953.500000</td>\n","      <td>1965.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>2007.000000</td>\n","      <td>129975.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>50.000000</td>\n","      <td>68.000000</td>\n","      <td>9453.000000</td>\n","      <td>6.000000</td>\n","      <td>5.000000</td>\n","      <td>1973.000000</td>\n","      <td>1993.000000</td>\n","      <td>0.000000</td>\n","      <td>368.500000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>26.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>6.000000</td>\n","      <td>2008.000000</td>\n","      <td>163000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>70.000000</td>\n","      <td>80.000000</td>\n","      <td>11570.000000</td>\n","      <td>7.000000</td>\n","      <td>6.000000</td>\n","      <td>2001.000000</td>\n","      <td>2004.000000</td>\n","      <td>164.000000</td>\n","      <td>733.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>168.000000</td>\n","      <td>70.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>8.000000</td>\n","      <td>2009.000000</td>\n","      <td>214000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>190.000000</td>\n","      <td>313.000000</td>\n","      <td>215245.000000</td>\n","      <td>10.000000</td>\n","      <td>9.000000</td>\n","      <td>2010.000000</td>\n","      <td>2010.000000</td>\n","      <td>1600.000000</td>\n","      <td>5644.000000</td>\n","      <td>1526.000000</td>\n","      <td>...</td>\n","      <td>1424.000000</td>\n","      <td>742.000000</td>\n","      <td>1012.000000</td>\n","      <td>508.000000</td>\n","      <td>576.000000</td>\n","      <td>800.000000</td>\n","      <td>17000.000000</td>\n","      <td>12.000000</td>\n","      <td>2010.000000</td>\n","      <td>755000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows Ã— 37 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-168b157f-f1cf-49f6-a31a-f7df908d145f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-168b157f-f1cf-49f6-a31a-f7df908d145f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-168b157f-f1cf-49f6-a31a-f7df908d145f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a61584d6-5dfe-4e2a-b07e-a64eaaf61c46\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a61584d6-5dfe-4e2a-b07e-a64eaaf61c46')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a61584d6-5dfe-4e2a-b07e-a64eaaf61c46 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Je_fgYyYjtWH","executionInfo":{"status":"ok","timestamp":1728196841358,"user_tz":-330,"elapsed":812,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"51998d0b-37e8-4066-ac5c-03e2daaac3b9"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 2919 entries, 1 to 2919\n","Data columns (total 80 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   MSSubClass     2919 non-null   int64  \n"," 1   MSZoning       2915 non-null   object \n"," 2   LotFrontage    2433 non-null   float64\n"," 3   LotArea        2919 non-null   int64  \n"," 4   Street         2919 non-null   object \n"," 5   Alley          198 non-null    object \n"," 6   LotShape       2919 non-null   object \n"," 7   LandContour    2919 non-null   object \n"," 8   Utilities      2917 non-null   object \n"," 9   LotConfig      2919 non-null   object \n"," 10  LandSlope      2919 non-null   object \n"," 11  Neighborhood   2919 non-null   object \n"," 12  Condition1     2919 non-null   object \n"," 13  Condition2     2919 non-null   object \n"," 14  BldgType       2919 non-null   object \n"," 15  HouseStyle     2919 non-null   object \n"," 16  OverallQual    2919 non-null   int64  \n"," 17  OverallCond    2919 non-null   int64  \n"," 18  YearBuilt      2919 non-null   int64  \n"," 19  YearRemodAdd   2919 non-null   int64  \n"," 20  RoofStyle      2919 non-null   object \n"," 21  RoofMatl       2919 non-null   object \n"," 22  Exterior1st    2918 non-null   object \n"," 23  Exterior2nd    2918 non-null   object \n"," 24  MasVnrType     1153 non-null   object \n"," 25  MasVnrArea     2896 non-null   float64\n"," 26  ExterQual      2919 non-null   object \n"," 27  ExterCond      2919 non-null   object \n"," 28  Foundation     2919 non-null   object \n"," 29  BsmtQual       2838 non-null   object \n"," 30  BsmtCond       2837 non-null   object \n"," 31  BsmtExposure   2837 non-null   object \n"," 32  BsmtFinType1   2840 non-null   object \n"," 33  BsmtFinSF1     2918 non-null   float64\n"," 34  BsmtFinType2   2839 non-null   object \n"," 35  BsmtFinSF2     2918 non-null   float64\n"," 36  BsmtUnfSF      2918 non-null   float64\n"," 37  TotalBsmtSF    2918 non-null   float64\n"," 38  Heating        2919 non-null   object \n"," 39  HeatingQC      2919 non-null   object \n"," 40  CentralAir     2919 non-null   object \n"," 41  Electrical     2918 non-null   object \n"," 42  1stFlrSF       2919 non-null   int64  \n"," 43  2ndFlrSF       2919 non-null   int64  \n"," 44  LowQualFinSF   2919 non-null   int64  \n"," 45  GrLivArea      2919 non-null   int64  \n"," 46  BsmtFullBath   2917 non-null   float64\n"," 47  BsmtHalfBath   2917 non-null   float64\n"," 48  FullBath       2919 non-null   int64  \n"," 49  HalfBath       2919 non-null   int64  \n"," 50  BedroomAbvGr   2919 non-null   int64  \n"," 51  KitchenAbvGr   2919 non-null   int64  \n"," 52  KitchenQual    2918 non-null   object \n"," 53  TotRmsAbvGrd   2919 non-null   int64  \n"," 54  Functional     2917 non-null   object \n"," 55  Fireplaces     2919 non-null   int64  \n"," 56  FireplaceQu    1499 non-null   object \n"," 57  GarageType     2762 non-null   object \n"," 58  GarageYrBlt    2760 non-null   float64\n"," 59  GarageFinish   2760 non-null   object \n"," 60  GarageCars     2918 non-null   float64\n"," 61  GarageArea     2918 non-null   float64\n"," 62  GarageQual     2760 non-null   object \n"," 63  GarageCond     2760 non-null   object \n"," 64  PavedDrive     2919 non-null   object \n"," 65  WoodDeckSF     2919 non-null   int64  \n"," 66  OpenPorchSF    2919 non-null   int64  \n"," 67  EnclosedPorch  2919 non-null   int64  \n"," 68  3SsnPorch      2919 non-null   int64  \n"," 69  ScreenPorch    2919 non-null   int64  \n"," 70  PoolArea       2919 non-null   int64  \n"," 71  PoolQC         10 non-null     object \n"," 72  Fence          571 non-null    object \n"," 73  MiscFeature    105 non-null    object \n"," 74  MiscVal        2919 non-null   int64  \n"," 75  MoSold         2919 non-null   int64  \n"," 76  YrSold         2919 non-null   int64  \n"," 77  SaleType       2918 non-null   object \n"," 78  SaleCondition  2919 non-null   object \n"," 79  SalePrice      1460 non-null   float64\n","dtypes: float64(12), int64(25), object(43)\n","memory usage: 1.8+ MB\n"]}]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"W0EL42oIjwRJ","executionInfo":{"status":"ok","timestamp":1728196857726,"user_tz":-330,"elapsed":716,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"324b40ca-2a3d-431d-e4eb-ef11be448a97"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MSSubClass          0\n","MSZoning            4\n","LotFrontage       486\n","LotArea             0\n","Street              0\n","                 ... \n","MoSold              0\n","YrSold              0\n","SaleType            1\n","SaleCondition       0\n","SalePrice        1459\n","Length: 80, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>MSSubClass</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>MSZoning</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>LotFrontage</th>\n","      <td>486</td>\n","    </tr>\n","    <tr>\n","      <th>LotArea</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Street</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>MoSold</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>YrSold</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>SaleType</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>SaleCondition</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>SalePrice</th>\n","      <td>1459</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>80 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df_null=df[df.isnull().sum()[df.isnull().sum()>0].index]"],"metadata":{"id":"Fo347xfSj0fU","executionInfo":{"status":"ok","timestamp":1728197055397,"user_tz":-330,"elapsed":721,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["df_null.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"_VdE7JTzkkr_","executionInfo":{"status":"ok","timestamp":1728197063678,"user_tz":-330,"elapsed":578,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"a98986d5-be3f-4869-d593-12af55e0eea2"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   MSZoning  LotFrontage Alley Utilities Exterior1st Exterior2nd MasVnrType  \\\n","Id                                                                            \n","1        RL         65.0   NaN    AllPub     VinylSd     VinylSd    BrkFace   \n","2        RL         80.0   NaN    AllPub     MetalSd     MetalSd        NaN   \n","3        RL         68.0   NaN    AllPub     VinylSd     VinylSd    BrkFace   \n","4        RL         60.0   NaN    AllPub     Wd Sdng     Wd Shng        NaN   \n","5        RL         84.0   NaN    AllPub     VinylSd     VinylSd    BrkFace   \n","\n","    MasVnrArea BsmtQual BsmtCond  ... GarageFinish GarageCars  GarageArea  \\\n","Id                                ...                                       \n","1        196.0       Gd       TA  ...          RFn        2.0       548.0   \n","2          0.0       Gd       TA  ...          RFn        2.0       460.0   \n","3        162.0       Gd       TA  ...          RFn        2.0       608.0   \n","4          0.0       TA       Gd  ...          Unf        3.0       642.0   \n","5        350.0       Gd       TA  ...          RFn        3.0       836.0   \n","\n","   GarageQual  GarageCond  PoolQC  Fence MiscFeature  SaleType  SalePrice  \n","Id                                                                         \n","1          TA          TA     NaN    NaN         NaN        WD   208500.0  \n","2          TA          TA     NaN    NaN         NaN        WD   181500.0  \n","3          TA          TA     NaN    NaN         NaN        WD   223500.0  \n","4          TA          TA     NaN    NaN         NaN        WD   140000.0  \n","5          TA          TA     NaN    NaN         NaN        WD   250000.0  \n","\n","[5 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-a3ab2f45-f4cb-4c4f-9949-c841b4583e7e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MSZoning</th>\n","      <th>LotFrontage</th>\n","      <th>Alley</th>\n","      <th>Utilities</th>\n","      <th>Exterior1st</th>\n","      <th>Exterior2nd</th>\n","      <th>MasVnrType</th>\n","      <th>MasVnrArea</th>\n","      <th>BsmtQual</th>\n","      <th>BsmtCond</th>\n","      <th>...</th>\n","      <th>GarageFinish</th>\n","      <th>GarageCars</th>\n","      <th>GarageArea</th>\n","      <th>GarageQual</th>\n","      <th>GarageCond</th>\n","      <th>PoolQC</th>\n","      <th>Fence</th>\n","      <th>MiscFeature</th>\n","      <th>SaleType</th>\n","      <th>SalePrice</th>\n","    </tr>\n","    <tr>\n","      <th>Id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>RL</td>\n","      <td>65.0</td>\n","      <td>NaN</td>\n","      <td>AllPub</td>\n","      <td>VinylSd</td>\n","      <td>VinylSd</td>\n","      <td>BrkFace</td>\n","      <td>196.0</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>...</td>\n","      <td>RFn</td>\n","      <td>2.0</td>\n","      <td>548.0</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WD</td>\n","      <td>208500.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>RL</td>\n","      <td>80.0</td>\n","      <td>NaN</td>\n","      <td>AllPub</td>\n","      <td>MetalSd</td>\n","      <td>MetalSd</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>...</td>\n","      <td>RFn</td>\n","      <td>2.0</td>\n","      <td>460.0</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WD</td>\n","      <td>181500.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>RL</td>\n","      <td>68.0</td>\n","      <td>NaN</td>\n","      <td>AllPub</td>\n","      <td>VinylSd</td>\n","      <td>VinylSd</td>\n","      <td>BrkFace</td>\n","      <td>162.0</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>...</td>\n","      <td>RFn</td>\n","      <td>2.0</td>\n","      <td>608.0</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WD</td>\n","      <td>223500.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>RL</td>\n","      <td>60.0</td>\n","      <td>NaN</td>\n","      <td>AllPub</td>\n","      <td>Wd Sdng</td>\n","      <td>Wd Shng</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>...</td>\n","      <td>Unf</td>\n","      <td>3.0</td>\n","      <td>642.0</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WD</td>\n","      <td>140000.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>RL</td>\n","      <td>84.0</td>\n","      <td>NaN</td>\n","      <td>AllPub</td>\n","      <td>VinylSd</td>\n","      <td>VinylSd</td>\n","      <td>BrkFace</td>\n","      <td>350.0</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>...</td>\n","      <td>RFn</td>\n","      <td>3.0</td>\n","      <td>836.0</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WD</td>\n","      <td>250000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3ab2f45-f4cb-4c4f-9949-c841b4583e7e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a3ab2f45-f4cb-4c4f-9949-c841b4583e7e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a3ab2f45-f4cb-4c4f-9949-c841b4583e7e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-25fdb5c5-7865-4735-a32a-999824941434\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-25fdb5c5-7865-4735-a32a-999824941434')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-25fdb5c5-7865-4735-a32a-999824941434 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_null"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["sns.heatmap(df_null.isnull())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"BzRSDlp-km7H","executionInfo":{"status":"ok","timestamp":1728197121930,"user_tz":-330,"elapsed":4116,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"72986b04-8468-4d50-9655-725446ce5e7d"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Id'>"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["df_objects=df[df.select_dtypes(include=['object']).columns]\n","df=df.drop(df[df_objects.isna().sum()[df_objects.isna().sum() > 1100].index],axis=1)"],"metadata":{"id":"-k6Jr75-k0Rz","executionInfo":{"status":"ok","timestamp":1728197491144,"user_tz":-330,"elapsed":573,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["df_objects=df_objects.drop(df_objects[df_objects.isna().sum()[df_objects.isna().sum() >1100].index],axis=1)"],"metadata":{"id":"9lXWvAMkmPRL","executionInfo":{"status":"ok","timestamp":1728197620570,"user_tz":-330,"elapsed":573,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["df_objects=df_objects.fillna('null')"],"metadata":{"id":"2a7WryUumuzB","executionInfo":{"status":"ok","timestamp":1728197646521,"user_tz":-330,"elapsed":980,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["df_objects_encoded=pd.get_dummies(df_objects)"],"metadata":{"id":"_bEBtZS8m1Hx","executionInfo":{"status":"ok","timestamp":1728197693591,"user_tz":-330,"elapsed":607,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["df_objects.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"NRvh4wbfnAPB","executionInfo":{"status":"ok","timestamp":1728197751367,"user_tz":-330,"elapsed":20,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"4973fc80-809c-4e4a-f193-816ab5e66506"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   MSZoning Street LotShape LandContour Utilities LotConfig LandSlope  \\\n","Id                                                                      \n","1        RL   Pave      Reg         Lvl    AllPub    Inside       Gtl   \n","2        RL   Pave      Reg         Lvl    AllPub       FR2       Gtl   \n","3        RL   Pave      IR1         Lvl    AllPub    Inside       Gtl   \n","4        RL   Pave      IR1         Lvl    AllPub    Corner       Gtl   \n","5        RL   Pave      IR1         Lvl    AllPub       FR2       Gtl   \n","\n","   Neighborhood Condition1 Condition2  ... Electrical KitchenQual Functional  \\\n","Id                                     ...                                     \n","1       CollgCr       Norm       Norm  ...      SBrkr          Gd        Typ   \n","2       Veenker      Feedr       Norm  ...      SBrkr          TA        Typ   \n","3       CollgCr       Norm       Norm  ...      SBrkr          Gd        Typ   \n","4       Crawfor       Norm       Norm  ...      SBrkr          Gd        Typ   \n","5       NoRidge       Norm       Norm  ...      SBrkr          Gd        Typ   \n","\n","   GarageType GarageFinish GarageQual GarageCond PavedDrive SaleType  \\\n","Id                                                                     \n","1      Attchd          RFn         TA         TA          Y       WD   \n","2      Attchd          RFn         TA         TA          Y       WD   \n","3      Attchd          RFn         TA         TA          Y       WD   \n","4      Detchd          Unf         TA         TA          Y       WD   \n","5      Attchd          RFn         TA         TA          Y       WD   \n","\n","   SaleCondition  \n","Id                \n","1         Normal  \n","2         Normal  \n","3         Normal  \n","4        Abnorml  \n","5         Normal  \n","\n","[5 rows x 37 columns]"],"text/html":["\n","  <div id=\"df-24fd4150-bb58-4b1e-8045-bba359ff9a9d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MSZoning</th>\n","      <th>Street</th>\n","      <th>LotShape</th>\n","      <th>LandContour</th>\n","      <th>Utilities</th>\n","      <th>LotConfig</th>\n","      <th>LandSlope</th>\n","      <th>Neighborhood</th>\n","      <th>Condition1</th>\n","      <th>Condition2</th>\n","      <th>...</th>\n","      <th>Electrical</th>\n","      <th>KitchenQual</th>\n","      <th>Functional</th>\n","      <th>GarageType</th>\n","      <th>GarageFinish</th>\n","      <th>GarageQual</th>\n","      <th>GarageCond</th>\n","      <th>PavedDrive</th>\n","      <th>SaleType</th>\n","      <th>SaleCondition</th>\n","    </tr>\n","    <tr>\n","      <th>Id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>RL</td>\n","      <td>Pave</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>Inside</td>\n","      <td>Gtl</td>\n","      <td>CollgCr</td>\n","      <td>Norm</td>\n","      <td>Norm</td>\n","      <td>...</td>\n","      <td>SBrkr</td>\n","      <td>Gd</td>\n","      <td>Typ</td>\n","      <td>Attchd</td>\n","      <td>RFn</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Y</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>RL</td>\n","      <td>Pave</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>FR2</td>\n","      <td>Gtl</td>\n","      <td>Veenker</td>\n","      <td>Feedr</td>\n","      <td>Norm</td>\n","      <td>...</td>\n","      <td>SBrkr</td>\n","      <td>TA</td>\n","      <td>Typ</td>\n","      <td>Attchd</td>\n","      <td>RFn</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Y</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>RL</td>\n","      <td>Pave</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>Inside</td>\n","      <td>Gtl</td>\n","      <td>CollgCr</td>\n","      <td>Norm</td>\n","      <td>Norm</td>\n","      <td>...</td>\n","      <td>SBrkr</td>\n","      <td>Gd</td>\n","      <td>Typ</td>\n","      <td>Attchd</td>\n","      <td>RFn</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Y</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>RL</td>\n","      <td>Pave</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>Corner</td>\n","      <td>Gtl</td>\n","      <td>Crawfor</td>\n","      <td>Norm</td>\n","      <td>Norm</td>\n","      <td>...</td>\n","      <td>SBrkr</td>\n","      <td>Gd</td>\n","      <td>Typ</td>\n","      <td>Detchd</td>\n","      <td>Unf</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Y</td>\n","      <td>WD</td>\n","      <td>Abnorml</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>RL</td>\n","      <td>Pave</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>FR2</td>\n","      <td>Gtl</td>\n","      <td>NoRidge</td>\n","      <td>Norm</td>\n","      <td>Norm</td>\n","      <td>...</td>\n","      <td>SBrkr</td>\n","      <td>Gd</td>\n","      <td>Typ</td>\n","      <td>Attchd</td>\n","      <td>RFn</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Y</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 37 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24fd4150-bb58-4b1e-8045-bba359ff9a9d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24fd4150-bb58-4b1e-8045-bba359ff9a9d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24fd4150-bb58-4b1e-8045-bba359ff9a9d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-19d3c760-33b6-4a52-ba3c-00fb94c6c5da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-19d3c760-33b6-4a52-ba3c-00fb94c6c5da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-19d3c760-33b6-4a52-ba3c-00fb94c6c5da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_objects"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df_objects_encoded.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"U1XQAlSanOtM","executionInfo":{"status":"ok","timestamp":1728197763548,"user_tz":-330,"elapsed":1127,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"9b26dbbb-2717-4b56-deff-b7b81cbf4511"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    MSZoning_C (all)  MSZoning_FV  MSZoning_RH  MSZoning_RL  MSZoning_RM  \\\n","Id                                                                         \n","1              False        False        False         True        False   \n","2              False        False        False         True        False   \n","3              False        False        False         True        False   \n","4              False        False        False         True        False   \n","5              False        False        False         True        False   \n","\n","    MSZoning_null  Street_Grvl  Street_Pave  LotShape_IR1  LotShape_IR2  ...  \\\n","Id                                                                       ...   \n","1           False        False         True         False         False  ...   \n","2           False        False         True         False         False  ...   \n","3           False        False         True          True         False  ...   \n","4           False        False         True          True         False  ...   \n","5           False        False         True          True         False  ...   \n","\n","    SaleType_New  SaleType_Oth  SaleType_WD  SaleType_null  \\\n","Id                                                           \n","1          False         False         True          False   \n","2          False         False         True          False   \n","3          False         False         True          False   \n","4          False         False         True          False   \n","5          False         False         True          False   \n","\n","    SaleCondition_Abnorml  SaleCondition_AdjLand  SaleCondition_Alloca  \\\n","Id                                                                       \n","1                   False                  False                 False   \n","2                   False                  False                 False   \n","3                   False                  False                 False   \n","4                    True                  False                 False   \n","5                   False                  False                 False   \n","\n","    SaleCondition_Family  SaleCondition_Normal  SaleCondition_Partial  \n","Id                                                                     \n","1                  False                  True                  False  \n","2                  False                  True                  False  \n","3                  False                  True                  False  \n","4                  False                 False                  False  \n","5                  False                  True                  False  \n","\n","[5 rows x 247 columns]"],"text/html":["\n","  <div id=\"df-6ff42c09-6172-4cbd-9036-dc28e1fdea53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MSZoning_C (all)</th>\n","      <th>MSZoning_FV</th>\n","      <th>MSZoning_RH</th>\n","      <th>MSZoning_RL</th>\n","      <th>MSZoning_RM</th>\n","      <th>MSZoning_null</th>\n","      <th>Street_Grvl</th>\n","      <th>Street_Pave</th>\n","      <th>LotShape_IR1</th>\n","      <th>LotShape_IR2</th>\n","      <th>...</th>\n","      <th>SaleType_New</th>\n","      <th>SaleType_Oth</th>\n","      <th>SaleType_WD</th>\n","      <th>SaleType_null</th>\n","      <th>SaleCondition_Abnorml</th>\n","      <th>SaleCondition_AdjLand</th>\n","      <th>SaleCondition_Alloca</th>\n","      <th>SaleCondition_Family</th>\n","      <th>SaleCondition_Normal</th>\n","      <th>SaleCondition_Partial</th>\n","    </tr>\n","    <tr>\n","      <th>Id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 247 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ff42c09-6172-4cbd-9036-dc28e1fdea53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6ff42c09-6172-4cbd-9036-dc28e1fdea53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6ff42c09-6172-4cbd-9036-dc28e1fdea53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-82d5ff3b-1009-47ca-adf0-2557ca921b50\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-82d5ff3b-1009-47ca-adf0-2557ca921b50')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-82d5ff3b-1009-47ca-adf0-2557ca921b50 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_objects_encoded"}},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["df_objects['Utilities'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"qSWp6ad3nRbX","executionInfo":{"status":"ok","timestamp":1728197800277,"user_tz":-330,"elapsed":1099,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"c2bb6104-a1f4-4d6b-e0fb-d70446b813b9"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Utilities\n","AllPub    2916\n","null         2\n","NoSeWa       1\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Utilities</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>AllPub</th>\n","      <td>2916</td>\n","    </tr>\n","    <tr>\n","      <th>null</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>NoSeWa</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["new_df=pd.concat([df,df_objects_encoded],axis=1)"],"metadata":{"id":"Ktd_8BKknaSG","executionInfo":{"status":"ok","timestamp":1728198797670,"user_tz":-330,"elapsed":991,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["len(new_df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ygt6q-yIrN9u","executionInfo":{"status":"ok","timestamp":1728198818865,"user_tz":-330,"elapsed":1156,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"e3d7eb06-21b9-426d-a53d-cc1eeb91c088"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["321"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["len(df.columns),len(df_objects_encoded.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8J0bakNQrTKx","executionInfo":{"status":"ok","timestamp":1728198883862,"user_tz":-330,"elapsed":732,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"f3230d97-d7d0-4005-affe-a92a365999fb"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(74, 247)"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["new_df=new_df.drop(df.select_dtypes(include=['object']),axis=1)"],"metadata":{"id":"295CgR_lrgXk","executionInfo":{"status":"ok","timestamp":1728198958471,"user_tz":-330,"elapsed":964,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["new_df.isna().sum()[new_df.isna().sum() > 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"Q0_9Yx1Cr1a6","executionInfo":{"status":"ok","timestamp":1728198992114,"user_tz":-330,"elapsed":867,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"fad2c1eb-3e85-4eb7-f701-698b951786e0"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LotFrontage      486\n","MasVnrArea        23\n","BsmtFinSF1         1\n","BsmtFinSF2         1\n","BsmtUnfSF          1\n","TotalBsmtSF        1\n","BsmtFullBath       2\n","BsmtHalfBath       2\n","GarageYrBlt      159\n","GarageCars         1\n","GarageArea         1\n","SalePrice       1459\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>LotFrontage</th>\n","      <td>486</td>\n","    </tr>\n","    <tr>\n","      <th>MasVnrArea</th>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>BsmtFinSF1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>BsmtFinSF2</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>BsmtUnfSF</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>TotalBsmtSF</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>BsmtFullBath</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>BsmtHalfBath</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>GarageYrBlt</th>\n","      <td>159</td>\n","    </tr>\n","    <tr>\n","      <th>GarageCars</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>GarageArea</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>SalePrice</th>\n","      <td>1459</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["Mode_columns=['GarageCars','GarageYrBlt','BsmtFullBath','BsmtHalfBath']"],"metadata":{"id":"SlTpl_UCr9oO","executionInfo":{"status":"ok","timestamp":1728199164076,"user_tz":-330,"elapsed":975,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["Mean_columns=['LotFrontage','MasVnrArea','BsmtFinSF1','BsmtFinSF2','BsmtUnfSF','TotalBsmtSF','GarageArea']"],"metadata":{"id":"9QRKLGRXsnUG","executionInfo":{"status":"ok","timestamp":1728199267981,"user_tz":-330,"elapsed":749,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["for i in Mode_columns:\n","  new_df[i]=new_df[i].fillna(new_df[i].mode()[0])"],"metadata":{"id":"pCxSnQIKtAxY","executionInfo":{"status":"ok","timestamp":1728199362869,"user_tz":-330,"elapsed":801,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["for i in Mean_columns:\n","  new_df[i]=new_df[i].fillna(np.round(new_df[i].mean()))"],"metadata":{"id":"3QB_jmPPtX9y","executionInfo":{"status":"ok","timestamp":1728199407551,"user_tz":-330,"elapsed":1010,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["new_df.isna().sum()[new_df.isna().sum() > 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":115},"id":"Py6lXo1ftjB4","executionInfo":{"status":"ok","timestamp":1728199453088,"user_tz":-330,"elapsed":9,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"482fa239-1d20-467f-a1fd-ba6bcbb6bc44"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SalePrice    1459\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>SalePrice</th>\n","      <td>1459</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["training_data=new_df[0:len(df_1)]\n","testing_data=new_df[len(df_1):]\n"],"metadata":{"id":"YqF8dCPmtuBH","executionInfo":{"status":"ok","timestamp":1728199597225,"user_tz":-330,"elapsed":3,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["testing_data=testing_data.drop(columns='SalePrice')"],"metadata":{"id":"B8nApBUhuRSt","executionInfo":{"status":"ok","timestamp":1728199598824,"user_tz":-330,"elapsed":8,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_squared_error\n","from sklearn.linear_model import LinearRegression\n","from xgboost import XGBRegressor\n","from sklearn.ensemble import RandomForestRegressor"],"metadata":{"id":"ks5EdXu3uRtJ","executionInfo":{"status":"ok","timestamp":1728199803840,"user_tz":-330,"elapsed":814,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["X=training_data.drop(columns='SalePrice')\n","y=training_data['SalePrice']\n","X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)\n","Y_train=np.reshape(y_train,(-1,1))\n","y_test=np.reshape(y_test,(-1,1))"],"metadata":{"id":"fCb73GeDvDj1","executionInfo":{"status":"ok","timestamp":1728200114734,"user_tz":-330,"elapsed":833,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["X_train.shape,y_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TCIiUxhCwPuY","executionInfo":{"status":"ok","timestamp":1728200129333,"user_tz":-330,"elapsed":879,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"3f38266a-324d-467b-8db8-2772eae9937d"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((1168, 283), (1168,))"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["model_1=LinearRegression()\n","model_1.fit(X_train,y_train)\n","y_pred=model_1.predict(X_test)\n","mean_squared_error(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ac1vBk-rwTRO","executionInfo":{"status":"ok","timestamp":1728200361191,"user_tz":-330,"elapsed":908,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"b45323ab-d4e9-41bc-94bb-8375d933d8a2"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7906629029264880.0"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["model_2=XGBRegressor(n_estimators=1000,learning_rate=0.1)\n","model_2.fit(X_train,y_train)\n","y_pred=model_2.predict(X_test)\n","mean_squared_error(y_test,y_pred)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V0XiO-0uxL0z","executionInfo":{"status":"ok","timestamp":1728200521458,"user_tz":-330,"elapsed":11856,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"543ff820-ed12-4e9d-b369-f4c846098858"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["432902096.4019964"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["model_3=RandomForestRegressor(n_estimators=100)\n","model_3.fit(X_train,y_train)\n","y_pred=model_3.predict(X_test)\n","mean_squared_error(y_test,y_pred)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-aAaON0IxwGK","executionInfo":{"status":"ok","timestamp":1728200560811,"user_tz":-330,"elapsed":5733,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"33a3eb86-4f72-4e99-dc37-c03276603e50"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["489670799.54226726"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["\n","pred=model_2.predict(testing_data)\n","final=pd.DataFrame()\n","final['Id']=testing_data.index\n","final['SalePrice']=pred\n","\n","final.to_csv('gdrive/MyDrive/Colab Notebooks/Youtube Practise/Kaggle /House price advanced regression/output.csv',index=False)"],"metadata":{"id":"yEkoHDEAx4KR","executionInfo":{"status":"ok","timestamp":1728202955893,"user_tz":-330,"elapsed":13,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["final_output=pd.read_csv('gdrive/MyDrive/Colab Notebooks/Youtube Practise/Kaggle /House price advanced regression/output.csv')"],"metadata":{"id":"Shb31UGM62ZS","executionInfo":{"status":"ok","timestamp":1728203248229,"user_tz":-330,"elapsed":1276,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["final_output.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"cqCpuzaY8McJ","executionInfo":{"status":"ok","timestamp":1728203255289,"user_tz":-330,"elapsed":696,"user":{"displayName":"Anubhav","userId":"12469594762239788777"}},"outputId":"2b5d7684-9031-43f4-cdd4-bb8286d09919"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Id  SalePrice\n","0  1461  129272.00\n","1  1462  150229.25\n","2  1463  183112.80\n","3  1464  183902.73\n","4  1465  213321.93"],"text/html":["\n","  <div id=\"df-9b315694-128c-443d-b7a9-c9bfdf48a2af\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SalePrice</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1461</td>\n","      <td>129272.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1462</td>\n","      <td>150229.25</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1463</td>\n","      <td>183112.80</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1464</td>\n","      <td>183902.73</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1465</td>\n","      <td>213321.93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9b315694-128c-443d-b7a9-c9bfdf48a2af')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9b315694-128c-443d-b7a9-c9bfdf48a2af button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9b315694-128c-443d-b7a9-c9bfdf48a2af');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-062679b5-a68b-4c4f-ae47-cba6408306d4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-062679b5-a68b-4c4f-ae47-cba6408306d4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-062679b5-a68b-4c4f-ae47-cba6408306d4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_output","summary":"{\n  \"name\": \"final_output\",\n  \"rows\": 1459,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 421,\n        \"min\": 1461,\n        \"max\": 2919,\n        \"num_unique_values\": 1459,\n        \"samples\": [\n          2782,\n          2297,\n          1874\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SalePrice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 72349.75756979398,\n        \"min\": 57868.48,\n        \"max\": 550870.82,\n        \"num_unique_values\": 1457,\n        \"samples\": [\n          118156.75,\n          136199.5,\n          138725.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":[],"metadata":{"id":"IH4ZigR38OXl"},"execution_count":null,"outputs":[]}]}